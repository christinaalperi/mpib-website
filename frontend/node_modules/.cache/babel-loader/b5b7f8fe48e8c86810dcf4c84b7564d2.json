{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db, storage } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { Heading, Body, FormElements, DeleteContactsDiv, SubmitButton, Background, Centering } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateContactForm() {\n  _s();\n\n  const [contacts, setContacts] = useState([{}]);\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [imageUpload, setImageUpload] = useState(null);\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(() => {\n    contactsCollection.onSnapshot(snapshot => {\n      const contactsData = [];\n      snapshot.docs.map(doc => {\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        });\n      });\n      setContacts(contactsData);\n    });\n  }, []);\n\n  const uploadURL = url => {\n    console.log(url);\n    addDoc(collection(db, 'photos'), {\n      url: url\n    });\n  };\n\n  const uploadImage = e => {\n    e.preventDefault();\n    const fileType = imageUpload['type'];\n    console.log(fileType);\n    if (imageUpload == null) return;\n    console.log(imageUpload);\n    const storageRef = storage.ref();\n    const uploadTask = storageRef.child(`/contactImages/${imageUpload.name}`).put(imageUpload);\n    uploadTask.on('state_changed', snapshot => {\n      console.log(snapshot);\n    }, err => {\n      console.log(err);\n    }, () => {\n      storage.ref(\"/contactImages\").child(imageUpload.name).getDownloadURL().then(url => {\n        console.log(`File available at: ${url}`); // need to send url to firestore photos collection\n        // setPhotoURLs(...photoURLs, url)\n\n        uploadURL(url);\n        alert(\"success\");\n      });\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach(el => {\n      if (document.getElementById(el.Name).checked == true) {\n        console.log(el.id);\n        deleteDoc(doc(db, \"contacts\", el.id));\n      }\n    }); // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n    //   }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Contact \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fullname,\n              onChange: e => {\n                setFullname(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: role,\n              onChange: e => setRole(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => setImageUpload(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => {\n              e.preventDefault();\n              uploadImage(e);\n\n              if (fullname != '' && email != '' && role != '') {\n                addDoc(collection(db, \"contacts\"), {\n                  Name: fullname,\n                  Email: email,\n                  Role: role\n                });\n              }\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Contact(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteContactsDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              'listStyle': 'none'\n            },\n            children: contacts.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: item.Name,\n                    type: \"checkbox\",\n                    name: item.Name,\n                    value: item.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 22\n                  }, this), item.Name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => handleOnSubmit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateContactForm, \"xM0uGGXahEuz7dQb/g2iu4NKI/E=\");\n\n_c = UpdateContactForm;\nexport default UpdateContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateContactForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateContactForm.js"],"names":["React","useState","useEffect","db","storage","doc","collection","addDoc","deleteDoc","Heading","Body","FormElements","DeleteContactsDiv","SubmitButton","Background","Centering","UpdateContactForm","contacts","setContacts","fullname","setFullname","email","setEmail","role","setRole","imageUpload","setImageUpload","contactsCollection","onSnapshot","snapshot","contactsData","docs","map","push","id","Name","data","Email","Role","uploadURL","url","console","log","uploadImage","e","preventDefault","fileType","storageRef","ref","uploadTask","child","name","put","on","err","getDownloadURL","then","alert","handleOnSubmit","forEach","el","document","getElementById","checked","target","value","files","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db, storage } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\"; \nimport {Heading, Body, FormElements, DeleteContactsDiv, SubmitButton, Background, Centering} from './styles'\n\nfunction UpdateContactForm() {\n\n  const [contacts, setContacts] = useState([{}])\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [imageUpload, setImageUpload] = useState(null)\n\n  const contactsCollection = db.collection(\"contacts\");\n\n\n\n  useEffect(()=>{\n    contactsCollection.onSnapshot((snapshot)=>{\n      const contactsData = [];\n      snapshot.docs.map((doc)=>{\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        })\n      })\n      setContacts(contactsData)\n    })\n  },[])\n\n  const uploadURL = (url) => {  \n    console.log(url)\n    addDoc(collection(db,'photos'),{\n        url: url\n    })\n\n  }\n  const uploadImage = (e) => {\n          e.preventDefault()\n          const fileType = imageUpload['type'];\n          console.log(fileType)\n          if(imageUpload==null) return;\n          console.log(imageUpload)\n          const storageRef = storage.ref()\n          const uploadTask = storageRef.child(`/contactImages/${imageUpload.name}`).put(imageUpload)\n          uploadTask.on('state_changed', \n              (snapshot)=>{\n                  console.log(snapshot)  \n                  \n              }, \n              (err)=>{\n                  console.log(err)\n              }, \n              ()=>{\n              storage\n                  .ref(\"/contactImages\")\n                  .child(imageUpload.name)\n                  .getDownloadURL()\n                  .then((url)=>{\n                      console.log(`File available at: ${url}`)\n                      // need to send url to firestore photos collection\n                      // setPhotoURLs(...photoURLs, url)\n                      uploadURL(url);\n                      alert(\"success\")\n                  });\n              \n          })\n      }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach((el)=>{\n      if(document.getElementById(el.Name).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"contacts\",el.id));\n      }\n      \n    })\n\n    // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n        \n    //   }\n    // })\n  }\n\n  return (\n    <Body>\n     <Centering><Background>\n     <Heading>Add Contact </Heading>\n        <FormElements>\n          <label>\n            Name: <input type='text' value={fullname} onChange={(e)=>{setFullname(e.target.value)}}/>\n          </label>\n          <label>\n            Email: <input type='text' value={email} onChange={(e)=>setEmail(e.target.value)}/>\n          </label>\n          <label>\n            Role: <input type='text' value={role} onChange={(e)=>setRole(e.target.value)}/>\n          </label>\n          <label>\n            Role: <input type='file' onChange={(e)=>setImageUpload(e.target.files[0])}/>\n          </label>\n          <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e) => {\n              e.preventDefault();\n              uploadImage(e);\n             if((fullname!='')&&(email!='')&&(role!='')) {\n              addDoc(collection(db, \"contacts\"), {\n                Name: fullname,\n                Email: email,\n                Role: role\n\n              });\n             }\n              \n            }}>Submit</SubmitButton>\n        </FormElements>\n     </Background>\n       \n        \n\n    \n\n    <Background><Heading>Delete Contact(s)</Heading>\n      <DeleteContactsDiv>\n      <ul style={{'listStyle':'none'}}>\n      {contacts.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.Name} type=\"checkbox\" name={item.Name} value={item.Name}/>{item.Name}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n    \n      </DeleteContactsDiv></Background></Centering>\n      \n      \n      \n\n    \n    </Body>\n    \n  )\n}\n\nexport default UpdateContactForm"]},"metadata":{},"sourceType":"module"}