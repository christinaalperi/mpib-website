{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/loginpage/src/components/AnnouncementsList/AnnouncementList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Announcement from './Announcement';\nimport { db } from \"../../base\"; // this list needs to be a listener of the changes Admin makes to the form\n// in order to do that i have to add a databasse collection for the announcements and then here render that database's current list sending the message to the Announcement components props \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nf;\n\nconst AnnouncementList = () => {\n  _s();\n\n  const [announcements, setAnnouncements] = useState([{}]);\n  const collection = db.collection(\"announcements\");\n  useEffect(() => {\n    collection.onSnapshot(snapshot => {\n      const data = [];\n      snapshot.docs.map(doc => {\n        data.push({\n          id: doc.id,\n          title: doc.data().title,\n          details: doc.data().details\n        });\n      });\n      setAnnouncements(data);\n      console.log(announcements);\n    });\n  }, []);\n\n  function createCard(announcement) {\n    return /*#__PURE__*/_jsxDEV(Announcement, {\n      title: contact.title,\n      details: contact.details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcementList\",\n    children: contacts.map(createCard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AnnouncementList, \"Bi1aU/NU82uOrpnVvSznWduZmeA=\");\n\n_c = AnnouncementList;\nexport default AnnouncementList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnnouncementList\");","map":{"version":3,"sources":["/Users/admin/Desktop/loginpage/src/components/AnnouncementsList/AnnouncementList.js"],"names":["React","useState","useEffect","useContext","Announcement","db","f","AnnouncementList","announcements","setAnnouncements","collection","onSnapshot","snapshot","data","docs","map","doc","push","id","title","details","console","log","createCard","announcement","contact","contacts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAsD,OAAtD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,EAAT,QAAmB,YAAnB,C,CAGA;AAEA;;;AAEAC,CAAC;;AACD,MAAMC,gBAAgB,GAAI,MAAM;AAAA;;AAE/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlD;AAEA,QAAMS,UAAU,GAAGL,EAAE,CAACK,UAAH,CAAc,eAAd,CAAnB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAACC,UAAX,CAAuBC,QAAD,IAAc;AAClC,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACvBH,QAAAA,IAAI,CAACI,IAAL,CAAW;AACTC,UAAAA,EAAE,EAACF,GAAG,CAACE,EADE;AAETC,UAAAA,KAAK,EAACH,GAAG,CAACH,IAAJ,GAAWM,KAFR;AAGTC,UAAAA,OAAO,EAACJ,GAAG,CAACH,IAAJ,GAAWO;AAHV,SAAX;AAOD,OARD;AASAX,MAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACD,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;;AAkBA,WAASe,UAAT,CAAoBC,YAApB,EAAkC;AAChC,wBACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEC,OAAO,CAACN,KAA7B;AAAoC,MAAA,OAAO,EAAEM,OAAO,CAACL;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACGM,QAAQ,CAACX,GAAT,CAAaQ,UAAb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKA,CAnCD;;GAAMhB,gB;;KAAAA,gB;AAsCN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect, useContext} from 'react'\nimport Announcement from './Announcement'\nimport { db } from \"../../base\";\n\n\n// this list needs to be a listener of the changes Admin makes to the form\n\n// in order to do that i have to add a databasse collection for the announcements and then here render that database's current list sending the message to the Announcement components props \n\nf\nconst AnnouncementList =  () => {\n  \n const [announcements, setAnnouncements] = useState([{}]);\n\n const collection = db.collection(\"announcements\")\n\n useEffect(() => {\n   collection.onSnapshot((snapshot) => {\n     const data = []\n     snapshot.docs.map(doc => {\n       data.push( {\n         id:doc.id,\n         title:doc.data().title,\n         details:doc.data().details,\n       })\n       \n       \n     })\n     setAnnouncements(data)\n     console.log(announcements)\n   });\n }, []);\n\n\n function createCard(announcement) {\n   return (\n       <Announcement title={contact.title} details={contact.details}></Announcement>\n   );\n }\n   \n return (\n   <div className=\"announcementList\"> \n     {contacts.map(createCard)}\n   </div>\n )\n}\n\n\nexport default AnnouncementList"]},"metadata":{},"sourceType":"module"}