{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Desktop/mpib-website/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Question from'./Question';import{db}from'../../base';import{QuestionListContainer}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";function QuestionsList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var collection=db.collection(\"questions\");useEffect(function(){collection.onSnapshot(function(snapshot){var data=[];snapshot.docs.map(function(doc){data.push({id:doc.id,question:doc.data().question,answer:doc.data().answer});});setQuestions(data);console.log(questions);});},[]);function createQuestion(q){return/*#__PURE__*/_jsx(Question,{question:q.question,answer:q.answer});}return/*#__PURE__*/_jsx(QuestionListContainer,{children:questions&&questions.map(createQuestion)});}export default QuestionsList;","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/QuestionsList/QuestionsList.js"],"names":["React","useState","useEffect","Question","db","QuestionListContainer","QuestionsList","questions","setQuestions","collection","onSnapshot","snapshot","data","docs","map","doc","push","id","question","answer","console","log","createQuestion","q"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,EAAT,KAAmB,YAAnB,CACA,OAAQC,qBAAR,KAAoC,UAApC,C,2CACA,QAASC,CAAAA,aAAT,EAAyB,CAEvB,cAAgCL,QAAQ,CAAC,EAAD,CAAxC,wCAAOM,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,UAAU,CAAGL,EAAE,CAACK,UAAH,CAAc,WAAd,CAAnB,CAEAP,SAAS,CAAC,UAAM,CACdO,UAAU,CAACC,UAAX,CAAsB,SAACC,QAAD,CAAc,CAClC,GAAMC,CAAAA,IAAI,CAAG,EAAb,CACAD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,SAAAC,GAAG,CAAI,CACvBH,IAAI,CAACI,IAAL,CAAW,CACTC,EAAE,CAACF,GAAG,CAACE,EADE,CAETC,QAAQ,CAACH,GAAG,CAACH,IAAJ,GAAWM,QAFX,CAGTC,MAAM,CAACJ,GAAG,CAACH,IAAJ,GAAWO,MAHT,CAAX,EAOD,CARD,EASAX,YAAY,CAACI,IAAD,CAAZ,CACAQ,OAAO,CAACC,GAAR,CAAYd,SAAZ,EACD,CAbD,EAeD,CAhBQ,CAgBN,EAhBM,CAAT,CAkBA,QAASe,CAAAA,cAAT,CAAwBC,CAAxB,CAA2B,CACzB,mBACI,KAAC,QAAD,EAAU,QAAQ,CAAEA,CAAC,CAACL,QAAtB,CAAgC,MAAM,CAAEK,CAAC,CAACJ,MAA1C,EADJ,CAGD,CAED,mBACE,KAAC,qBAAD,WACKZ,SAAS,EAAIA,SAAS,CAACO,GAAV,CAAcQ,cAAd,CADlB,EADF,CAMD,CAED,cAAehB,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Question from './Question'\nimport { db } from '../../base'\nimport {QuestionListContainer} from './styles'\nfunction QuestionsList() {\n\n  const [questions, setQuestions]=useState([]);\n  const collection = db.collection(\"questions\");\n\n  useEffect(() => {\n    collection.onSnapshot((snapshot) => {\n      const data = []\n      snapshot.docs.map(doc => {\n        data.push( {\n          id:doc.id,\n          question:doc.data().question,\n          answer:doc.data().answer,\n        })\n        \n        \n      })\n      setQuestions(data)\n      console.log(questions)\n    });\n\n  }, []);\n\n  function createQuestion(q) {\n    return (\n        <Question question={q.question} answer={q.answer}></Question>\n    );\n  }\n\n  return (\n    <QuestionListContainer>\n        {questions && questions.map(createQuestion)}\n    </QuestionListContainer>\n    \n  )\n}\n\nexport default QuestionsList"]},"metadata":{},"sourceType":"module"}