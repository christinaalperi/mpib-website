{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/loginpage/src/components/UpdateForm/UpdateContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateContactForm() {\n  _s();\n\n  const [contacts, setContacts] = useState([{}]);\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [checkedState, setCheckedState] = useState(new Array(contacts.length).fill(false));\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(() => {\n    contactsCollection.onSnapshot(snapshot => {\n      const contactsData = [];\n      snapshot.docs.map(doc => {\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        });\n      });\n      setContacts(contactsData);\n    });\n  });\n\n  const handleOnChange = idx => {\n    const updatedCheckedState = new Array(contacts.length).fill(false);\n    updatedCheckedState[idx] = true;\n    setCheckedState(updatedCheckedState);\n  };\n\n  const handleOnSubmit = () => {\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n    checkedState.forEach((state, index) => {\n      console.log(state);\n\n      if (state == true) {\n        const contactIDToBeDeleted = contacts[index].id;\n        deleteDoc(collection(db, \"contacts\", {\n          contactIDToBeDeleted\n        }));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addContactDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Contact \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fullname,\n            onChange: e => {\n              setFullname(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: role,\n            onChange: e => setRole(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: e => {\n            e.preventDefault();\n            console.log('here');\n            addDoc(collection(db, \"contacts\"), {\n              Name: fullname,\n              Email: email,\n              Role: role\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deleteContactDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete Contact(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            'list-style': 'none'\n          },\n          children: contacts.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: checkedState[index],\n                  name: item.Name,\n                  value: item.Name,\n                  onChange: () => handleOnChange(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 22\n                }, this), item.Name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: () => handleOnSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateContactForm, \"PI4CAzd7NVkTH5w/2u0SxdFp714=\");\n\n_c = UpdateContactForm;\nexport default UpdateContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateContactForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/loginpage/src/components/UpdateForm/UpdateContactForm.js"],"names":["React","useState","useEffect","db","collection","addDoc","deleteDoc","UpdateContactForm","contacts","setContacts","fullname","setFullname","email","setEmail","role","setRole","checkedState","setCheckedState","Array","length","fill","contactsCollection","onSnapshot","snapshot","contactsData","docs","map","doc","push","id","Name","data","Email","Role","handleOnChange","idx","updatedCheckedState","handleOnSubmit","forEach","state","index","console","log","contactIDToBeDeleted","e","target","value","preventDefault","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc } from \"firebase/firestore\"; \n\nfunction UpdateContactForm() {\n\n  const [contacts, setContacts] = useState([{}])\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [checkedState, setCheckedState] = useState(new Array(contacts.length).fill(false))\n\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(()=>{\n    contactsCollection.onSnapshot((snapshot)=>{\n      const contactsData = [];\n      snapshot.docs.map((doc)=>{\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        })\n      })\n      setContacts(contactsData)\n    })\n  })\n\n\n  const handleOnChange = (idx) => {\n  \n    const updatedCheckedState = new Array(contacts.length).fill(false); \n    updatedCheckedState[idx]=true;\n\n    setCheckedState(updatedCheckedState);\n    \n  }\n\n  const handleOnSubmit = () => {\n\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n    checkedState.forEach((state,index)=>{\n      console.log(state)\n      if(state==true){\n        const contactIDToBeDeleted = contacts[index].id;\n        deleteDoc(collection(db,\"contacts\",{contactIDToBeDeleted}))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"addContactDiv\">\n        <h1>Add Contact </h1>\n        <form>\n          <label>\n            Name: <input type='text' value={fullname} onChange={(e)=>{setFullname(e.target.value)}}/>\n          </label>\n          <label>\n            Email: <input type='text' value={email} onChange={(e)=>setEmail(e.target.value)}/>\n          </label>\n          <label>\n            Role: <input type='text' value={role} onChange={(e)=>setRole(e.target.value)}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" onClick={(e) => {\n              e.preventDefault();\n              console.log('here')\n              addDoc(collection(db, \"contacts\"), {\n                Name: fullname,\n                Email: email,\n                Role: role\n              });\n            }} />\n        </form>\n        \n\n    </div>\n\n    <div className=\"deleteContactDiv\">\n      <h1>Delete Contact(s)</h1>\n      <form>\n      <ul style={{'list-style':'none'}}>\n      {contacts.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input type=\"checkbox\" checked={checkedState[index]} name={item.Name} value={item.Name} onChange={()=>handleOnChange(index)}/>{item.Name}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <input type=\"submit\" value=\"Submit\" onClick={()=>handleOnSubmit()}/>\n    \n      </form>\n      \n      \n\n    </div>\n    </div>\n    \n  )\n}\n\nexport default UpdateContactForm"]},"metadata":{},"sourceType":"module"}