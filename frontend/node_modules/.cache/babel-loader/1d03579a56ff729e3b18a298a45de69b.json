{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Body, Heading, Centering, Background, SubmitButton, FormElements } from './styles';\nimport { storage, db } from '../../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePhotosForm = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [photoURL, setPhotoURL] = useState('');\n  const [imgsToDelete, setImgs] = useState([]);\n  const [imgList, setImgList] = useState({});\n  const imgIds = []; // const imgRef = storage.ref().child(`/images/${}`)\n  // const imgURLCollection = db.collection(\"photos\");\n  // useEffect(()=>{\n  //     const data = []\n  //     imgURLCollection.onSnapshot((snapshot)=>{\n  //         snapshot.docs.map((doc)=>{\n  //             data.push({\n  //                 id:doc.id,\n  //                 url:doc.data().url\n  //             })\n  //         })\n  //         setImgList(data);\n  //     })\n  // },[])\n\n  const deleteImgs = imgIdArr => {\n    imgIdArr.forEach(img => {\n      console.log(img.id);\n    }); // e.preventDefault();\n    // imgList.forEach((el)=>{\n    //     if(document.getElementById(el.url).checked==true){\n    //       console.log(el.url);\n    //      // deleteDoc(doc(db,\"photos\",el.id));\n    //       // basically now you need to string parse the name out of the url and have that display instead and also access firebase storage and delete the image with that name (need to delete url firestore and the img itself in storage)\n    //     }\n    //   })\n  };\n\n  const uploadURL = url => {\n    console.log(url);\n    addDoc(collection(db, 'photos'), {\n      url: url\n    });\n  };\n\n  const uploadImage = e => {\n    e.preventDefault();\n    const fileType = imageUpload['type'];\n    console.log(fileType);\n    if (imageUpload == null) return;\n    console.log(imageUpload);\n    const storageRef = storage.ref();\n    const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload);\n    uploadTask.on('state_changed', snapshot => {\n      console.log(snapshot);\n    }, err => {\n      console.log(err);\n    }, () => {\n      storage.ref(\"/images\").child(imageUpload.name).getDownloadURL().then(url => {\n        console.log(`File available at: ${url}`); // need to send url to firestore photos collection\n\n        setPhotoURL(url); // setPhotoURLs(...photoURLs, url)\n\n        uploadURL(url);\n        alert(\"success\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              setImageUpload(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            onClick: e => uploadImage(e),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              'listStyle': 'none'\n            },\n            children: imgList.map((item, index) => {\n              imgIds.push(item.id);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: item.url,\n                    type: \"checkbox\",\n                    value: item.url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 36\n                  }, this), item.url]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 29\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => deleteImgs(imgIds),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePhotosForm, \"SkhxXssVmaqelA3pYCltRXltZqY=\");\n\n_c = UpdatePhotosForm;\nexport default UpdatePhotosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePhotosForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js"],"names":["React","useState","useEffect","collection","addDoc","deleteDoc","doc","Body","Heading","Centering","Background","SubmitButton","FormElements","storage","db","UpdatePhotosForm","imageUpload","setImageUpload","photoURL","setPhotoURL","imgsToDelete","setImgs","imgList","setImgList","imgIds","deleteImgs","imgIdArr","forEach","img","console","log","id","uploadURL","url","uploadImage","e","preventDefault","fileType","storageRef","ref","uploadTask","child","name","put","on","snapshot","err","getDownloadURL","then","alert","target","files","map","item","index","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Body, Heading, Centering, Background, SubmitButton, FormElements} from './styles'\nimport { storage, db } from '../../base'\n\nconst UpdatePhotosForm = () => {\n    const [imageUpload, setImageUpload] = useState(null)\n    const [photoURL, setPhotoURL] = useState('')\n    \n    const [imgsToDelete, setImgs] = useState([])\n    const [imgList, setImgList] = useState({})\n    const imgIds = []\n    // const imgRef = storage.ref().child(`/images/${}`)\n    // const imgURLCollection = db.collection(\"photos\");\n\n    // useEffect(()=>{\n    //     const data = []\n    //     imgURLCollection.onSnapshot((snapshot)=>{\n    //         snapshot.docs.map((doc)=>{\n    //             data.push({\n    //                 id:doc.id,\n    //                 url:doc.data().url\n    //             })\n    //         })\n    //         setImgList(data);\n    //     })\n    // },[])\n\n    const deleteImgs = (imgIdArr) => {\n        imgIdArr.forEach((img)=>{\n            console.log(img.id)\n        })\n        // e.preventDefault();\n        // imgList.forEach((el)=>{\n        //     if(document.getElementById(el.url).checked==true){\n        //       console.log(el.url);\n        //      // deleteDoc(doc(db,\"photos\",el.id));\n\n        //       // basically now you need to string parse the name out of the url and have that display instead and also access firebase storage and delete the image with that name (need to delete url firestore and the img itself in storage)\n        //     }\n            \n        //   })\n\n    }\n\n    const uploadURL = (url) => {  \n        console.log(url)\n        addDoc(collection(db,'photos'),{\n            url: url\n        })\n\n    }\n    const uploadImage = (e) => {\n        e.preventDefault()\n        const fileType = imageUpload['type'];\n        console.log(fileType)\n        if(imageUpload==null) return;\n        console.log(imageUpload)\n        const storageRef = storage.ref()\n        const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload)\n        uploadTask.on('state_changed', \n            (snapshot)=>{\n                console.log(snapshot)  \n                \n            }, \n            (err)=>{\n                console.log(err)\n            }, \n            ()=>{\n            storage\n                .ref(\"/images\")\n                .child(imageUpload.name)\n                .getDownloadURL()\n                .then((url)=>{\n                    console.log(`File available at: ${url}`)\n                    // need to send url to firestore photos collection\n                    setPhotoURL(url);\n                    // setPhotoURLs(...photoURLs, url)\n                    uploadURL(url);\n                    alert(\"success\")\n                });\n            \n        })\n    }\n  return (\n    <Body>\n\n        <Centering>\n            <Background>\n                <Heading>Add Images</Heading>\n                <FormElements>\n                   \n                    <input type='file' onChange={(e)=>{setImageUpload(e.target.files[0])}}></input>\n                    <SubmitButton onClick={(e)=>uploadImage(e)}>Upload Image</SubmitButton>\n                   \n                </FormElements>\n                \n            </Background>\n\n\n            <Background>\n                <Heading>\n                    Delete Images\n                </Heading>\n                 <div>\n                    <ul style={{'listStyle':'none'}}>\n                    {imgList.map((item, index)=>{\n                        imgIds.push(item.id)\n                        return(\n                            <li key={index}>\n                            \n                            <label><input id={item.url} type=\"checkbox\" value={item.url}/>{item.url}</label>\n                            </li>\n\n                        )\n                        })}\n                    </ul>\n                    <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>deleteImgs(imgIds)}>Submit</SubmitButton>\n                    \n                    </div>\n            </Background>\n        </Centering>\n    </Body>\n  )\n}\n\nexport default UpdatePhotosForm"]},"metadata":{},"sourceType":"module"}