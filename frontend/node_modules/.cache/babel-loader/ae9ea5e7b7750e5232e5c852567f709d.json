{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db, storage } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { Heading, Body, FormElements, DeleteContactsDiv, SubmitButton, Background, Centering } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateContactForm() {\n  _s();\n\n  const [contacts, setContacts] = useState([{}]);\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [imageUpload, setImageUpload] = useState(null);\n  const [photoURL, setPhotoURL] = useState('');\n  const defaultUserURL = 'https://firebasestorage.googleapis.com/v0/b/myersparkibwebsite-cb3ea.appspot.com/o/contactImages%2Fdefault-user.png?alt=media&token=134b62f2-dfb5-4a2c-b1aa-a98eb80e82a3';\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(() => {\n    contactsCollection.onSnapshot(snapshot => {\n      const contactsData = [];\n      snapshot.docs.map(doc => {\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        });\n      });\n      setContacts(contactsData);\n    });\n  }, []);\n\n  const uploadURL = url => {\n    console.log(url);\n    addDoc(collection(db, 'contactPhotoURLs'), {\n      url: url\n    });\n  };\n\n  const uploadImage = () => {\n    if (imageUpload !== null) {\n      const fileType = imageUpload['type'];\n      console.log(fileType);\n      console.log(imageUpload);\n      const storageRef = storage.ref();\n      const uploadTask = storageRef.child(`/contactImages/${imageUpload.name}`).put(imageUpload);\n      uploadTask.on('state_changed', snapshot => {\n        console.log(snapshot);\n      }, err => {\n        console.log(err);\n      }, () => {\n        storage.ref(\"/contactImages\").child(imageUpload.name).getDownloadURL().then(url => {\n          console.log(`File available at: ${url}`); // need to send url to firestore photos collection\n\n          setPhotoURL(url);\n          uploadURL(url);\n        });\n      });\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach(el => {\n      if (document.getElementById(el.Name).checked == true) {\n        console.log(el.id);\n        deleteDoc(doc(db, \"contacts\", el.id));\n      }\n    }); // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n    //   }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Contact \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"setName\",\n              type: \"text\",\n              value: fullname,\n              onChange: e => {\n                setFullname(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"setEmail\",\n              type: \"text\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"setRole\",\n              type: \"text\",\n              value: role,\n              onChange: e => setRole(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Photo: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"setImg\",\n              type: \"file\",\n              onChange: e => setImageUpload(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => {\n              e.preventDefault();\n              uploadImage();\n\n              if (fullname !== '' && email !== '' && role !== '' && imageUpload !== null) {\n                addDoc(collection(db, \"contacts\"), {\n                  Name: fullname,\n                  Email: email,\n                  Role: role,\n                  imgURL: photoURL\n                });\n                alert(\"Success\");\n              }\n\n              if (fullname !== '' && email !== '' && role !== '') {\n                addDoc(collection(db, \"contacts\"), {\n                  Name: fullname,\n                  Email: email,\n                  Role: role,\n                  imgURL: defaultUserURL\n                });\n                alert(\"Success\");\n              }\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Contact(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteContactsDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              'listStyle': 'none'\n            },\n            children: contacts.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: item.Name,\n                    type: \"checkbox\",\n                    name: item.Name,\n                    value: item.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 22\n                  }, this), item.Name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 15\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => handleOnSubmit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateContactForm, \"QM2Mi/KRGIVs5D2DzBVKB8IcqTM=\");\n\n_c = UpdateContactForm;\nexport default UpdateContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateContactForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateContactForm.js"],"names":["React","useState","useEffect","db","storage","doc","collection","addDoc","deleteDoc","Heading","Body","FormElements","DeleteContactsDiv","SubmitButton","Background","Centering","UpdateContactForm","contacts","setContacts","fullname","setFullname","email","setEmail","role","setRole","imageUpload","setImageUpload","photoURL","setPhotoURL","defaultUserURL","contactsCollection","onSnapshot","snapshot","contactsData","docs","map","push","id","Name","data","Email","Role","uploadURL","url","console","log","uploadImage","fileType","storageRef","ref","uploadTask","child","name","put","on","err","getDownloadURL","then","handleOnSubmit","e","preventDefault","forEach","el","document","getElementById","checked","target","value","files","imgURL","alert","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db, storage } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\"; \nimport {Heading, Body, FormElements, DeleteContactsDiv, SubmitButton, Background, Centering} from './styles'\n\nfunction UpdateContactForm() {\n\n  const [contacts, setContacts] = useState([{}])\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [imageUpload, setImageUpload] = useState(null)\n  const [photoURL, setPhotoURL] = useState('')\n  const defaultUserURL = 'https://firebasestorage.googleapis.com/v0/b/myersparkibwebsite-cb3ea.appspot.com/o/contactImages%2Fdefault-user.png?alt=media&token=134b62f2-dfb5-4a2c-b1aa-a98eb80e82a3'\n  const contactsCollection = db.collection(\"contacts\");\n\n\n\n  useEffect(()=>{\n    contactsCollection.onSnapshot((snapshot)=>{\n      const contactsData = [];\n      snapshot.docs.map((doc)=>{\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        })\n      })\n      setContacts(contactsData)\n    })\n  },[])\n\n  const uploadURL = (url) => {  \n    console.log(url)\n    addDoc(collection(db,'contactPhotoURLs'),{\n        url: url\n    })\n\n  }\n  const uploadImage = () => {\n          \n          if(imageUpload!==null) {\n            const fileType = imageUpload['type'];\n            console.log(fileType)\n            console.log(imageUpload)\n            const storageRef = storage.ref()\n            const uploadTask = storageRef.child(`/contactImages/${imageUpload.name}`).put(imageUpload)\n            uploadTask.on('state_changed', \n                (snapshot)=>{\n                    console.log(snapshot)  \n                    \n                }, \n                (err)=>{\n                    console.log(err)\n                }, \n                ()=>{\n                storage\n                    .ref(\"/contactImages\")\n                    .child(imageUpload.name)\n                    .getDownloadURL()\n                    .then((url)=>{\n                        console.log(`File available at: ${url}`)\n                        // need to send url to firestore photos collection\n                        setPhotoURL(url)\n                        uploadURL(url);\n                    });\n                \n            })\n            }\n      }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach((el)=>{\n      if(document.getElementById(el.Name).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"contacts\",el.id));\n      }\n      \n    })\n\n    // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n        \n    //   }\n    // })\n  }\n\n  return (\n    <Body>\n     <Centering><Background>\n     <Heading>Add Contact </Heading>\n        <FormElements>\n          <label>\n            Name: <input id='setName' type='text' value={fullname} onChange={(e)=>{setFullname(e.target.value)}}/>\n          </label>\n          <label>\n            Email: <input id='setEmail' type='text' value={email} onChange={(e)=>setEmail(e.target.value)}/>\n          </label>\n          <label>\n            Role: <input id='setRole' type='text' value={role} onChange={(e)=>setRole(e.target.value)}/>\n          </label>\n          <label>\n            Photo: <input id='setImg' type='file' onChange={(e)=>setImageUpload(e.target.files[0])}/>\n          </label>\n          <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e) => {\n              e.preventDefault();\n              \n              uploadImage();\n             if((fullname!=='')&&(email!=='')&&(role!=='')&&(imageUpload!==null)) {\n              addDoc(collection(db, \"contacts\"), {\n                Name: fullname,\n                Email: email,\n                Role: role,\n                imgURL: photoURL\n\n              });\n              alert(\"Success\")\n             }\n             if((fullname!=='')&&(email!=='')&&(role!=='')) {\n              addDoc(collection(db, \"contacts\"), {\n                Name: fullname,\n                Email: email,\n                Role: role,\n                imgURL: defaultUserURL\n                \n              });\n              alert(\"Success\")\n            }\n             \n\n              \n            }}>Submit</SubmitButton>\n        </FormElements>\n     </Background>\n       \n        \n\n    \n\n    <Background><Heading>Delete Contact(s)</Heading>\n      <DeleteContactsDiv>\n      <ul style={{'listStyle':'none'}}>\n      {contacts.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.Name} type=\"checkbox\" name={item.Name} value={item.Name}/>{item.Name}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n    \n      </DeleteContactsDiv></Background></Centering>\n      \n      \n      \n\n    \n    </Body>\n    \n  )\n}\n\nexport default UpdateContactForm"]},"metadata":{},"sourceType":"module"}