{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/loginpage/src/components/AnnouncementsList/AnnouncementList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Announcement from './Announcement';\nimport { db } from \"../../base\"; // this list needs to be a listener of the changes Admin makes to the form\n// in order to do that i have to add a databasse collection for the announcements and then here render that database's current list sending the message to the Announcement components props \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nf;\n\nconst AnnouncementList = () => {\n  _s();\n\n  const [contacts, setContacts] = useState([{}]);\n  const collection = db.collection(\"contacts\");\n  useEffect(() => {\n    collection.onSnapshot(snapshot => {\n      const data = [];\n      snapshot.docs.map(doc => {\n        data.push({\n          id: doc.id,\n          name: doc.data().Name,\n          role: doc.data().Role,\n          email: doc.data().Email\n        });\n      });\n      setContacts(data);\n      console.log(contacts);\n    });\n  }, []);\n\n  function createCard(contact) {\n    return /*#__PURE__*/_jsxDEV(ContactCard, {\n      name: contact.name,\n      role: contact.role,\n      email: contact.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcementList\",\n    children: contacts.map(createCard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AnnouncementList, \"+xFnF2EVx1VgCJ7n5X92ebwHUoA=\");\n\n_c = AnnouncementList;\nexport default AnnouncementList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnnouncementList\");","map":{"version":3,"sources":["/Users/admin/Desktop/loginpage/src/components/AnnouncementsList/AnnouncementList.js"],"names":["React","Announcement","db","f","AnnouncementList","contacts","setContacts","useState","collection","useEffect","onSnapshot","snapshot","data","docs","map","doc","push","id","name","Name","role","Role","email","Email","console","log","createCard","contact"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,EAAT,QAAmB,YAAnB,C,CAGA;AAEA;;;AAEAC,CAAC;;AACD,MAAMC,gBAAgB,GAAI,MAAM;AAAA;;AAE/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;AAEA,QAAMC,UAAU,GAAGN,EAAE,CAACM,UAAH,CAAc,UAAd,CAAnB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,UAAU,CAACE,UAAX,CAAuBC,QAAD,IAAc;AAClC,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACvBH,QAAAA,IAAI,CAACI,IAAL,CAAW;AACTC,UAAAA,EAAE,EAACF,GAAG,CAACE,EADE;AAETC,UAAAA,IAAI,EAACH,GAAG,CAACH,IAAJ,GAAWO,IAFP;AAGTC,UAAAA,IAAI,EAACL,GAAG,CAACH,IAAJ,GAAWS,IAHP;AAITC,UAAAA,KAAK,EAACP,GAAG,CAACH,IAAJ,GAAWW;AAJR,SAAX;AAQD,OATD;AAUAjB,MAAAA,WAAW,CAACM,IAAD,CAAX;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ;AACD,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAmBA,WAASqB,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,wBACI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,OAAO,CAACT,IAA3B;AAAiC,MAAA,IAAI,EAAES,OAAO,CAACP,IAA/C;AAAqD,MAAA,KAAK,EAAEO,OAAO,CAACL;AAApE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACGjB,QAAQ,CAACS,GAAT,CAAaY,UAAb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKA,CApCD;;GAAMtB,gB;;KAAAA,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport Announcement from './Announcement'\nimport { db } from \"../../base\";\n\n\n// this list needs to be a listener of the changes Admin makes to the form\n\n// in order to do that i have to add a databasse collection for the announcements and then here render that database's current list sending the message to the Announcement components props \n\nf\nconst AnnouncementList =  () => {\n  \n const [contacts, setContacts] = useState([{}]);\n\n const collection = db.collection(\"contacts\")\n\n useEffect(() => {\n   collection.onSnapshot((snapshot) => {\n     const data = []\n     snapshot.docs.map(doc => {\n       data.push( {\n         id:doc.id,\n         name:doc.data().Name,\n         role:doc.data().Role,\n         email:doc.data().Email\n       })\n       \n       \n     })\n     setContacts(data)\n     console.log(contacts)\n   });\n }, []);\n\n\n function createCard(contact) {\n   return (\n       <ContactCard name={contact.name} role={contact.role} email={contact.email}></ContactCard>\n   );\n }\n   \n return (\n   <div className=\"announcementList\"> \n     {contacts.map(createCard)}\n   </div>\n )\n}\n\n\nexport default AnnouncementList"]},"metadata":{},"sourceType":"module"}