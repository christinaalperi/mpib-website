{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Desktop/app/loginpage/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{db}from'../../base';import{collection,addDoc,deleteDoc,doc}from\"firebase/firestore\";import{Heading,Body,FormElements,SubmitButton,Background}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UpdateQuestionsForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),question=_useState2[0],setQuestion=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),answer=_useState4[0],setAnswer=_useState4[1];var _useState5=useState([{}]),_useState6=_slicedToArray(_useState5,2),questions=_useState6[0],setQuestions=_useState6[1];var questionsCollection=db.collection(\"questions\");useEffect(function(){questionsCollection.onSnapshot(function(snapshot){var questionsData=[];snapshot.docs.map(function(doc){questionsData.push({id:doc.id,question:doc.data().question,answer:doc.data().answer});});setQuestions(questionsData);});},[]);var handleOnSubmit=function handleOnSubmit(e){e.preventDefault();// iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\nquestions.forEach(function(el){if(document.getElementById(el.question).checked==true){console.log(el.id);deleteDoc(doc(db,\"questions\",el.id));}});};return/*#__PURE__*/_jsxs(Body,{children:[/*#__PURE__*/_jsxs(Background,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Add Question\"}),/*#__PURE__*/_jsxs(FormElements,{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Question: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:question,onChange:function onChange(e){return setQuestion(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Answer: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:answer,onChange:function onChange(e){return setAnswer(e.target.value);}})]}),/*#__PURE__*/_jsx(SubmitButton,{type:\"submit\",value:\"Submit\",onClick:function onClick(e){e.preventDefault();if(question!=''&&answer!=''){addDoc(collection(db,'questions'),{question:question,answer:answer});}},children:\"Submit\"})]})]}),/*#__PURE__*/_jsxs(Background,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Delete Question(s)\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"ul\",{style:{'listStyle':'none'},children:questions.map(function(item,index){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:item.question,type:\"checkbox\",name:item.question,value:item.question}),item.question]})},index);})}),/*#__PURE__*/_jsx(SubmitButton,{type:\"submit\",value:\"Submit\",onClick:function onClick(e){return handleOnSubmit(e);},children:\"Submit\"})]})]})]});}export default UpdateQuestionsForm;","map":{"version":3,"sources":["/Users/admin/Desktop/app/loginpage/src/components/UpdateForm/UpdateQuestionsForm.js"],"names":["React","useState","useEffect","db","collection","addDoc","deleteDoc","doc","Heading","Body","FormElements","SubmitButton","Background","UpdateQuestionsForm","question","setQuestion","answer","setAnswer","questions","setQuestions","questionsCollection","onSnapshot","snapshot","questionsData","docs","map","push","id","data","handleOnSubmit","e","preventDefault","forEach","el","document","getElementById","checked","console","log","target","value","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Heading, Body, FormElements, SubmitButton, Background } from './styles'\n\nfunction UpdateQuestionsForm() {\n    const [question, setQuestion] = useState('')\n    const [answer, setAnswer] = useState('')\n    const [questions, setQuestions] = useState([{}])\n\n    const questionsCollection = db.collection(\"questions\");\n  useEffect(()=>{\n    questionsCollection.onSnapshot((snapshot)=>{\n      const questionsData = [];\n      snapshot.docs.map((doc)=>{\n        questionsData.push({\n          id: doc.id,\n          question: doc.data().question,\n          answer: doc.data().answer\n        })\n      })\n      setQuestions(questionsData)\n    })\n  },[])\n\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    questions.forEach((el)=>{\n      if(document.getElementById(el.question).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"questions\",el.id));\n      }\n      \n    })\n}\n\n  return (\n    <Body>\n      <Background>\n      <Heading>Add Question</Heading>\n        <FormElements>\n       \n            <label>\n                Question: <input type='text' value={question} onChange={(e)=>setQuestion(e.target.value)}/>\n            </label>\n            <label>\n                Answer: <input type='text' value={answer} onChange={(e)=>setAnswer(e.target.value)}/>\n            </label>\n            <SubmitButton type='submit' value=\"Submit\" onClick={(e)=>{\n                e.preventDefault();\n               if((question!='')&&(answer!='')){\n                addDoc(collection(db, 'questions'), {\n                    question: question, \n                    answer: answer\n                })\n               }\n            }}>Submit</SubmitButton>\n        \n          </FormElements>\n      </Background>\n        \n    <Background>\n        \n        <Heading>Delete Question(s)</Heading>\n        <div>\n      <ul style={{'listStyle':'none'}}>\n      {questions.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.question} type=\"checkbox\" name={item.question} value={item.question}/>{item.question}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n    \n      </div>\n        </Background>\n        \n\n    </Body>\n  )\n}\n\nexport default UpdateQuestionsForm"]},"metadata":{},"sourceType":"module"}