{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Body, Heading, Centering, Background, SubmitButton, FormElements } from './styles';\nimport { storage, db } from '../../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePhotosForm = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [photoURL, setPhotoURL] = useState('');\n  const [imgs, setImgs] = useState([{}]);\n\n  const deleteImg = () => {};\n\n  const uploadURL = url => {\n    console.log(url);\n    addDoc(collection(db, 'photos'), {\n      url: url\n    });\n  };\n\n  const uploadImage = e => {\n    e.preventDefault();\n    const fileType = imageUpload['type'];\n    console.log(fileType);\n    if (imageUpload == null) return;\n    console.log(imageUpload);\n    const storageRef = storage.ref();\n    const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload);\n    uploadTask.on('state_changed', snapshot => {\n      console.log(snapshot);\n    }, err => {\n      console.log(err);\n    }, () => {\n      storage.ref(\"/images\").child(imageUpload.name).getDownloadURL().then(url => {\n        console.log(`File available at: ${url}`); // need to send url to firestore photos collection\n\n        setPhotoURL(url); // setPhotoURLs(...photoURLs, url)\n\n        uploadURL(url);\n        alert(\"success\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              setImageUpload(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            onClick: e => uploadImage(e),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePhotosForm, \"wvrqhKiLCe4d9gxe0f04P+6vmqA=\");\n\n_c = UpdatePhotosForm;\nexport default UpdatePhotosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePhotosForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js"],"names":["React","useState","useEffect","collection","addDoc","deleteDoc","doc","Body","Heading","Centering","Background","SubmitButton","FormElements","storage","db","UpdatePhotosForm","imageUpload","setImageUpload","photoURL","setPhotoURL","imgs","setImgs","deleteImg","uploadURL","url","console","log","uploadImage","e","preventDefault","fileType","storageRef","ref","uploadTask","child","name","put","on","snapshot","err","getDownloadURL","then","alert","target","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Body, Heading, Centering, Background, SubmitButton, FormElements} from './styles'\nimport { storage, db } from '../../base'\n\nconst UpdatePhotosForm = () => {\n    const [imageUpload, setImageUpload] = useState(null)\n    const [photoURL, setPhotoURL] = useState('')\n    const [imgs, setImgs] = useState([{}])\n\n\n    const deleteImg = () => {\n\n        \n    }\n\n    const uploadURL = (url) => {  \n        console.log(url)\n        addDoc(collection(db,'photos'),{\n            url: url\n        })\n\n    }\n    const uploadImage = (e) => {\n        e.preventDefault()\n        const fileType = imageUpload['type'];\n        console.log(fileType)\n        if(imageUpload==null) return;\n        console.log(imageUpload)\n        const storageRef = storage.ref()\n        const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload)\n        uploadTask.on('state_changed', \n            (snapshot)=>{\n                console.log(snapshot)  \n                \n            }, \n            (err)=>{\n                console.log(err)\n            }, \n            ()=>{\n            storage\n                .ref(\"/images\")\n                .child(imageUpload.name)\n                .getDownloadURL()\n                .then((url)=>{\n                    console.log(`File available at: ${url}`)\n                    // need to send url to firestore photos collection\n                    setPhotoURL(url);\n                    // setPhotoURLs(...photoURLs, url)\n                    uploadURL(url);\n                    alert(\"success\")\n                });\n            \n        })\n    }\n  return (\n    <Body>\n\n        <Centering>\n            <Background>\n                <Heading>Add Images</Heading>\n                <FormElements>\n                   \n                    <input type='file' onChange={(e)=>{setImageUpload(e.target.files[0])}}></input>\n                    <SubmitButton onClick={(e)=>uploadImage(e)}>Upload Image</SubmitButton>\n                   \n                </FormElements>\n                \n            </Background>\n\n\n            <Background>\n                <Heading>\n                    Delete Images\n                </Heading>\n                \n            </Background>\n        </Centering>\n    </Body>\n  )\n}\n\nexport default UpdatePhotosForm"]},"metadata":{},"sourceType":"module"}