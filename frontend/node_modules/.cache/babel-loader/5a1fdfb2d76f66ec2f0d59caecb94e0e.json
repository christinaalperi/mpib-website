{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateLinksForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Heading, Body, FormElements, SubmitButton, Background, Centering } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateLinksForm = () => {\n  _s();\n\n  const [links, setLinks] = useState([{}]);\n  const [newURL, setNewURL] = useState('');\n  const [newLinkedTo, setNewLinkedTo] = useState('');\n  const linksCollection = db.collection(\"links\");\n  useEffect(() => {\n    linksCollection.onSnapshot(snapshot => {\n      const data = [];\n      snapshot.docs.map(doc => {\n        data.push({\n          id: doc.id,\n          url: doc.data().url,\n          linkedTo: doc.data().linkedTo\n        });\n      });\n      setLinks(data);\n    });\n  }, [links]);\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    links.forEach(el => {\n      if (document.getElementById(el.linkedTo).checked == true) {\n        console.log(el.id);\n        deleteDoc(doc(db, \"questions\", el.id));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Link Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"addLinkName\",\n              type: \"text\",\n              onChange: e => setNewLinkedTo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"addLinkURL\",\n              type: \"text\",\n              onChange: e => setNewURL(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: e => {\n              e.preventDefault();\n\n              if (newLinkedTo !== '' && newURL !== '') {\n                addDoc(collection(db, 'links'), {\n                  url: newURL,\n                  linkedTo: newLinkedTo\n                });\n                document.getElementById('addLinkName').value = '';\n                document.getElementById('addLinkURL').value = '';\n              }\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            'listStyle': 'none'\n          },\n          children: links.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: item.url,\n                  type: \"checkbox\",\n                  name: item.linkedTo,\n                  value: item.linkedTo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 22\n                }, this), item.linkedTo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: e => handleOnSubmit(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateLinksForm, \"5xBmjjQa6R4WqvUS7M7lgU2pN5A=\");\n\n_c = UpdateLinksForm;\nexport default UpdateLinksForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateLinksForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateLinksForm.js"],"names":["React","useState","useEffect","db","collection","addDoc","deleteDoc","doc","Heading","Body","FormElements","SubmitButton","Background","Centering","UpdateLinksForm","links","setLinks","newURL","setNewURL","newLinkedTo","setNewLinkedTo","linksCollection","onSnapshot","snapshot","data","docs","map","push","id","url","linkedTo","handleOnSubmit","e","preventDefault","forEach","el","document","getElementById","checked","console","log","target","value","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Heading, Body, FormElements, SubmitButton, Background, Centering } from './styles'\n\nconst UpdateLinksForm = () => {\n  const [links, setLinks] = useState([{}]);\n  const [newURL, setNewURL] = useState('')\n  const [newLinkedTo, setNewLinkedTo] = useState('')\n  const linksCollection = db.collection(\"links\")\n  useEffect(()=>{\n    linksCollection.onSnapshot((snapshot)=>{\n      const data=[]\n      snapshot.docs.map((doc)=>{\n        data.push({\n          id: doc.id,\n          url: doc.data().url,\n          linkedTo: doc.data().linkedTo\n        })\n      })\n      setLinks(data);\n    })\n  },[links]);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    links.forEach((el)=>{\n      if(document.getElementById(el.linkedTo).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"questions\",el.id));\n      }\n      \n    })\n}\n\n  return (\n    <Body>\n      <Centering>\n        <Background>\n          <Heading>Add Link</Heading>\n          <FormElements>\n            <label>\n              Link Name: <input id=\"addLinkName\" type='text' onChange={(e)=>setNewLinkedTo(e.target.value)}></input>\n            </label>\n            <label>\n              URL: <input id=\"addLinkURL\" type='text' onChange={(e)=>setNewURL(e.target.value)}/>\n            </label>\n            <SubmitButton type='submit' value=\"Submit\" onClick={(e)=>{\n              e.preventDefault();\n              if(newLinkedTo!=='' && newURL !=='') {\n                addDoc(collection(db, 'links'), {\n                  url: newURL, \n                  linkedTo: newLinkedTo\n              })\n              document.getElementById('addLinkName').value=''\n              document.getElementById('addLinkURL').value=''\n              }\n            }}>Submit</SubmitButton>\n          </FormElements>\n        </Background>\n\n\n        <Background>\n          <Heading>Delete Link</Heading>\n          <ul style={{'listStyle':'none'}}>\n      {links.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.url} type=\"checkbox\" name={item.linkedTo} value={item.linkedTo}/>{item.linkedTo}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n        </Background>\n      </Centering>\n\n\n      \n    </Body>\n  )\n}\n\nexport default UpdateLinksForm"]},"metadata":{},"sourceType":"module"}