{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateQuestionsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Heading, Body, FormElements, SubmitButton, Background } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateQuestionsForm() {\n  _s();\n\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([{}]);\n  const questionsCollection = db.collection(\"questions\");\n  useEffect(() => {\n    questionsCollection.onSnapshot(snapshot => {\n      const questionsData = [];\n      snapshot.docs.map(doc => {\n        questionsData.push({\n          id: doc.id,\n          question: doc.data().question,\n          answer: doc.data().answer\n        });\n      });\n      setQuestions(questionsData);\n    });\n  }, []);\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    questions.forEach(el => {\n      if (document.getElementById(el.question).checked == true) {\n        console.log(el.id);\n        deleteDoc(doc(db, \"questions\", el.id));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: question,\n            onChange: e => setQuestion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Answer: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: answer,\n            onChange: e => setAnswer(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: e => {\n            e.preventDefault();\n\n            if (question != '' && answer != '') {\n              addDoc(collection(db, 'questions'), {\n                question: question,\n                answer: answer\n              });\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Delete Question(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            'listStyle': 'none'\n          },\n          children: questions.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: item.question,\n                  type: \"checkbox\",\n                  name: item.question,\n                  value: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 22\n                }, this), item.question]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: e => handleOnSubmit(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateQuestionsForm, \"GoHund256U2DzvdUM4SOzLHASmk=\");\n\n_c = UpdateQuestionsForm;\nexport default UpdateQuestionsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQuestionsForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdateQuestionsForm.js"],"names":["React","useState","useEffect","db","collection","addDoc","deleteDoc","doc","Heading","Body","FormElements","SubmitButton","Background","UpdateQuestionsForm","question","setQuestion","answer","setAnswer","questions","setQuestions","questionsCollection","onSnapshot","snapshot","questionsData","docs","map","push","id","data","handleOnSubmit","e","preventDefault","forEach","el","document","getElementById","checked","console","log","target","value","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Heading, Body, FormElements, SubmitButton, Background } from './styles'\n\nfunction UpdateQuestionsForm() {\n    const [question, setQuestion] = useState('')\n    const [answer, setAnswer] = useState('')\n    const [questions, setQuestions] = useState([{}])\n\n    const questionsCollection = db.collection(\"questions\");\n  useEffect(()=>{\n    questionsCollection.onSnapshot((snapshot)=>{\n      const questionsData = [];\n      snapshot.docs.map((doc)=>{\n        questionsData.push({\n          id: doc.id,\n          question: doc.data().question,\n          answer: doc.data().answer\n        })\n      })\n      setQuestions(questionsData)\n    })\n  },[])\n\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    questions.forEach((el)=>{\n      if(document.getElementById(el.question).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"questions\",el.id));\n      }\n      \n    })\n}\n\n  return (\n    <Body>\n      <Background>\n      <Heading>Add Question</Heading>\n        <FormElements>\n       \n            <label>\n                Question: <input type='text' value={question} onChange={(e)=>setQuestion(e.target.value)}/>\n            </label>\n            <label>\n                Answer: <input type='text' value={answer} onChange={(e)=>setAnswer(e.target.value)}/>\n            </label>\n            <SubmitButton type='submit' value=\"Submit\" onClick={(e)=>{\n                e.preventDefault();\n               if((question!='')&&(answer!='')){\n                addDoc(collection(db, 'questions'), {\n                    question: question, \n                    answer: answer\n                })\n               }\n            }}>Submit</SubmitButton>\n        \n          </FormElements>\n      </Background>\n        \n    <Background>\n        \n        <Heading>Delete Question(s)</Heading>\n        <div>\n      <ul style={{'listStyle':'none'}}>\n      {questions.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.question} type=\"checkbox\" name={item.question} value={item.question}/>{item.question}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n    \n      </div>\n        </Background>\n        \n\n    </Body>\n  )\n}\n\nexport default UpdateQuestionsForm"]},"metadata":{},"sourceType":"module"}