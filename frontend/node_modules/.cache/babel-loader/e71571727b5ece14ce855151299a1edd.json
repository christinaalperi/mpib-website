{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Body, Heading, Centering, Background, SubmitButton, FormElements } from './styles';\nimport { storage, db } from '../../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePhotosForm = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [photoURL, setPhotoURL] = useState('');\n  const [imgList, setImgList] = useState([{}]);\n  const imgRef = storage.ref();\n  const imgURLCollection = db.collection(\"photos\");\n  useEffect(() => {\n    const data = [];\n    imgURLCollection.onSnapshot(snapshot => {\n      snapshot.docs.map(doc => {\n        data.push({\n          id: doc.id,\n          url: doc.data().url,\n          name: doc.data().url.substring(92).split('?', 1)[0]\n        });\n      });\n      setImgList(data);\n    });\n  }, []);\n\n  const handleDelete = id => {\n    e.preventDefault(); // imgIds.forEach((imgId, index)=>{\n    //     if(document.getElementById(imgId).checked==true){\n    //         imgRef.child(`/images/${imgNames[index]}`).delete().then(()=>{\n    //             deleteDoc(doc(db,\"photos\",imgId)).then(()=>{alert(\"success\")})\n    //         }).catch((err)=>console.log(err))\n    //     } \n    // })\n  };\n\n  const uploadURL = url => {\n    addDoc(collection(db, 'photos'), {\n      url: url\n    });\n  };\n\n  const uploadImage = e => {\n    e.preventDefault();\n    if (imageUpload == null) return;\n    const storageRef = storage.ref();\n    const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload);\n    uploadTask.on('state_changed', snapshot => {\n      console.log(snapshot);\n    }, err => {\n      console.log(err);\n    }, () => {\n      storage.ref(\"/images\").child(imageUpload.name).getDownloadURL().then(url => {\n        console.log(`File available at: ${url}`);\n        setPhotoURL(url);\n        uploadURL(url);\n        alert(\"success\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(Centering, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              setImageUpload(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            onClick: e => uploadImage(e),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Delete Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              'listStyle': 'none'\n            },\n            children: imgList.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleDelete(e),\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePhotosForm, \"2UARa+OTnNjKM731swzsmRX2OGs=\");\n\n_c = UpdatePhotosForm;\nexport default UpdatePhotosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePhotosForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/components/UpdateForm/UpdatePhotosForm.js"],"names":["React","useState","useEffect","collection","addDoc","deleteDoc","doc","Body","Heading","Centering","Background","SubmitButton","FormElements","storage","db","UpdatePhotosForm","imageUpload","setImageUpload","photoURL","setPhotoURL","imgList","setImgList","imgRef","ref","imgURLCollection","data","onSnapshot","snapshot","docs","map","push","id","url","name","substring","split","handleDelete","e","preventDefault","uploadURL","uploadImage","storageRef","uploadTask","child","put","on","console","log","err","getDownloadURL","then","alert","target","files","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \nimport { Body, Heading, Centering, Background, SubmitButton, FormElements} from './styles'\nimport { storage, db } from '../../base'\n\nconst UpdatePhotosForm = () => {\n    const [imageUpload, setImageUpload] = useState(null)\n    const [photoURL, setPhotoURL] = useState('')\n    const [imgList, setImgList] = useState([{}])\n   \n    const imgRef = storage.ref()\n    const imgURLCollection = db.collection(\"photos\");\n  \n    useEffect(()=>{\n        const data = []\n        imgURLCollection.onSnapshot((snapshot)=>{\n            snapshot.docs.map((doc)=>{\n                data.push({\n                    id:doc.id,\n                    url:doc.data().url,\n                    name:doc.data().url.substring(92).split('?',1)[0]\n                })\n            })\n            \n            setImgList(data);\n        })\n    },[])\n\n    const handleDelete = (id) => {\n        e.preventDefault()\n\n\n        // imgIds.forEach((imgId, index)=>{\n        //     if(document.getElementById(imgId).checked==true){\n        //         imgRef.child(`/images/${imgNames[index]}`).delete().then(()=>{\n        //             deleteDoc(doc(db,\"photos\",imgId)).then(()=>{alert(\"success\")})\n        //         }).catch((err)=>console.log(err))\n                \n        //     } \n        // })\n    }\n\n    const uploadURL = (url) => {  \n        addDoc(collection(db,'photos'),{\n            url: url\n        })   \n    }\n    const uploadImage = (e) => {\n        e.preventDefault()\n        if(imageUpload==null) return;\n        const storageRef = storage.ref()\n        const uploadTask = storageRef.child(`/images/${imageUpload.name}`).put(imageUpload)\n        uploadTask.on('state_changed', \n            (snapshot)=>{\n                console.log(snapshot)  \n                \n            }, \n            (err)=>{\n                console.log(err)\n            }, \n            ()=>{\n            storage\n                .ref(\"/images\")\n                .child(imageUpload.name)\n                .getDownloadURL()\n                .then((url)=>{\n                    console.log(`File available at: ${url}`)\n                    setPhotoURL(url);\n                    uploadURL(url);\n                    alert(\"success\")\n                });\n            \n            \n        })\n    }\n  return (\n    <Body>\n\n        <Centering>\n            <Background>\n                <Heading>Add Images</Heading>\n                <FormElements>\n                   \n                    <input type='file' onChange={(e)=>{setImageUpload(e.target.files[0])}}></input>\n                    <SubmitButton onClick={(e)=>uploadImage(e)}>Upload Image</SubmitButton>\n                   \n                </FormElements>\n                \n            </Background>\n\n\n            <Background>\n                <Heading>\n                    Delete Images\n                </Heading>\n                 <div>\n                    <ul style={{'listStyle':'none'}}>\n                    \n                    {imgList.map((item, index)=>{\n                              \n                                return(\n                                    <li key={index}>\n                                    \n                                    <label><button onClick={(e)=>handleDelete(e)}>{item.name}</button></label>\n                                    </li>\n                                )\n                            \n                        \n                        })}\n                    \n                    \n                        \n                    </ul>\n                    \n                    \n                    </div>\n            </Background>\n        </Centering>\n    </Body>\n  )\n}\n\nexport default UpdatePhotosForm"]},"metadata":{},"sourceType":"module"}