{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mpib-website/frontend/src/pages/Photos/Photos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { storage, db } from '../../base';\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Photos() {\n  _s();\n\n  const [urls, setURLs] = useState([]);\n  const urlCollection = db.collection('photos');\n  useEffect(() => {\n    urlCollection.onSnapshot(snapshot => {\n      const data = [];\n      snapshot.docs.map(doc => {\n        data.push({\n          id: doc.id,\n          url: doc.data().url\n        });\n      });\n      setURLs(data);\n    }, []);\n\n    const fetchImages = async () => {\n      let result = await storage.ref().child(\"/images\").listAll();\n      let urlPromises = result.items.map(imageRef => imageRef.getDownloadURL());\n      return Promise.all(urlPromises);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Photos, \"6cjCER1CvbisunqbYKDlUCrFP0c=\");\n\n_c = Photos;\nexport default Photos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"sources":["/Users/admin/Desktop/mpib-website/frontend/src/pages/Photos/Photos.js"],"names":["React","useState","useEffect","Navbar","PageHeader","storage","db","collection","addDoc","deleteDoc","doc","Photos","urls","setURLs","urlCollection","onSnapshot","snapshot","data","docs","map","push","id","url","fetchImages","result","ref","child","listAll","urlPromises","items","imageRef","getDownloadURL","Promise","all"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,YAA5B;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,GAAxC,QAAmD,oBAAnD;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,aAAa,GAAGR,EAAE,CAACC,UAAH,CAAc,QAAd,CAAtB;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,aAAa,CAACC,UAAd,CAA0BC,QAAD,IAAa;AACpC,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBT,GAAD,IAAO;AACvBO,QAAAA,IAAI,CAACG,IAAL,CAAU;AACRC,UAAAA,EAAE,EAAEX,GAAG,CAACW,EADA;AAERC,UAAAA,GAAG,EAAEZ,GAAG,CAACO,IAAJ,GAAWK;AAFR,SAAV;AAID,OALD;AAMAT,MAAAA,OAAO,CAACI,IAAD,CAAP;AACD,KATD,EASE,EATF;;AAUA,UAAMM,WAAW,GAAG,YAAY;AAC9B,UAAIC,MAAM,GAAG,MAAMnB,OAAO,CAACoB,GAAR,GAAcC,KAAd,CAAoB,SAApB,EAA+BC,OAA/B,EAAnB;AACA,UAAIC,WAAW,GAAGJ,MAAM,CAACK,KAAP,CAAaV,GAAb,CAAkBW,QAAD,IACjCA,QAAQ,CAACC,cAAT,EADgB,CAAlB;AAIA,aAAOC,OAAO,CAACC,GAAR,CAAYL,WAAZ,CAAP;AACD,KAPD;AASD,GApBQ,EAoBP,EApBO,CAAT;AAsBA,sBACE;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlCQjB,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Navbar from '../../components/Navbar/Navbar'\nimport PageHeader from '../../components/PageHeader/PageHeader'\nimport { storage, db } from '../../base'\nimport { collection, addDoc, deleteDoc, doc } from \"firebase/firestore\"; \n\nfunction Photos() {\n  const [urls, setURLs] = useState([])\n  \n  const urlCollection = db.collection('photos')\n\n  useEffect(()=>{\n    urlCollection.onSnapshot((snapshot)=> {\n      const data = [];\n      snapshot.docs.map((doc)=>{\n        data.push({\n          id: doc.id,\n          url: doc.data().url\n        })\n      })\n      setURLs(data);\n    },[])\n    const fetchImages = async () => {\n      let result = await storage.ref().child(\"/images\").listAll();\n      let urlPromises = result.items.map((imageRef) =>\n        imageRef.getDownloadURL()\n      );\n\n      return Promise.all(urlPromises);\n    };\n\n  },[])\n\n  return (\n    <div>\n        <PageHeader />\n        <Navbar/>\n        \n    </div>\n  )\n}\n\nexport default Photos"]},"metadata":{},"sourceType":"module"}