{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/loginpage/src/components/UpdateForm/UpdateContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\";\nimport { Heading, Body, FormElements, DeleteContactsDiv, SubmitButton } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateContactForm() {\n  _s();\n\n  const [contacts, setContacts] = useState([{}]);\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(() => {\n    contactsCollection.onSnapshot(snapshot => {\n      const contactsData = [];\n      snapshot.docs.map(doc => {\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        });\n      });\n      setContacts(contactsData);\n    });\n  }, []);\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach(el => {\n      if (document.getElementById(el.Name).checked == true) {\n        console.log(el.id);\n        deleteDoc(doc(db, \"contacts\", el.id));\n      }\n    }); // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n    //   }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Add Contact \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fullname,\n          onChange: e => {\n            setFullname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: role,\n          onChange: e => setRole(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: e => {\n          e.preventDefault();\n\n          if (fullname != '' && email != '' && role != '') {\n            addDoc(collection(db, \"contacts\"), {\n              Name: fullname,\n              Email: email,\n              Role: role\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Delete Contact(s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteContactsDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          'listStyle': 'none'\n        },\n        children: contacts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: item.Name,\n                type: \"checkbox\",\n                name: item.Name,\n                value: item.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 22\n              }, this), item.Name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: e => handleOnSubmit(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateContactForm, \"1mvsfXAjL0EB2URBSFuTuoCcCho=\");\n\n_c = UpdateContactForm;\nexport default UpdateContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateContactForm\");","map":{"version":3,"sources":["/Users/admin/Desktop/loginpage/src/components/UpdateForm/UpdateContactForm.js"],"names":["React","useState","useEffect","db","doc","collection","addDoc","deleteDoc","Heading","Body","FormElements","DeleteContactsDiv","SubmitButton","UpdateContactForm","contacts","setContacts","fullname","setFullname","email","setEmail","role","setRole","contactsCollection","onSnapshot","snapshot","contactsData","docs","map","push","id","Name","data","Email","Role","handleOnSubmit","e","preventDefault","forEach","el","document","getElementById","checked","console","log","target","value","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { db } from '../../base';\nimport { doc, collection, addDoc, deleteDoc } from \"firebase/firestore\"; \nimport {Heading, Body, FormElements, DeleteContactsDiv, SubmitButton} from './styles'\nfunction UpdateContactForm() {\n\n  const [contacts, setContacts] = useState([{}])\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n\n  const contactsCollection = db.collection(\"contacts\");\n  useEffect(()=>{\n    contactsCollection.onSnapshot((snapshot)=>{\n      const contactsData = [];\n      snapshot.docs.map((doc)=>{\n        contactsData.push({\n          id: doc.id,\n          Name: doc.data().Name,\n          Email: doc.data().Email,\n          Role: doc.data().Role\n        })\n      })\n      setContacts(contactsData)\n    })\n  },[])\n\n\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    // iterate through the checkedState array and looked for the checked indices and then get the id of those items and then deleteDoc\n\n    contacts.forEach((el)=>{\n      if(document.getElementById(el.Name).checked==true){\n        console.log(el.id);\n        deleteDoc(doc(db,\"contacts\",el.id));\n      }\n      \n    })\n\n    // checkedState.forEach((state,index)=>{\n    //   console.log(state)\n    //   if(state==true){\n    //     const contactIDToBeDeleted = contacts[index].id;\n    //     deleteDoc(doc(db,\"contacts\",contactIDToBeDeleted));\n        \n    //   }\n    // })\n  }\n\n  return (\n    <Body>\n     \n        <Heading>Add Contact </Heading>\n        <FormElements>\n          <label>\n            Name: <input type='text' value={fullname} onChange={(e)=>{setFullname(e.target.value)}}/>\n          </label>\n          <label>\n            Email: <input type='text' value={email} onChange={(e)=>setEmail(e.target.value)}/>\n          </label>\n          <label>\n            Role: <input type='text' value={role} onChange={(e)=>setRole(e.target.value)}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" onClick={(e) => {\n              e.preventDefault();\n             if((fullname!='')&&(email!='')&&(role!='')) {\n              addDoc(collection(db, \"contacts\"), {\n                Name: fullname,\n                Email: email,\n                Role: role\n              });\n             }\n              \n            }} />\n        </FormElements>\n        \n\n    \n\n    \n      <Heading>Delete Contact(s)</Heading>\n      <DeleteContactsDiv>\n      <ul style={{'listStyle':'none'}}>\n      {contacts.map((item, index)=>{\n        \n          return(\n            <li key={index}>\n              \n              <label><input id={item.Name} type=\"checkbox\" name={item.Name} value={item.Name}/>{item.Name}</label>\n            </li>\n\n          )\n        })}\n      </ul>\n      <SubmitButton type=\"submit\" value=\"Submit\" onClick={(e)=>handleOnSubmit(e)}>Submit</SubmitButton>\n    \n      </DeleteContactsDiv>\n      \n      \n\n    \n    </Body>\n    \n  )\n}\n\nexport default UpdateContactForm"]},"metadata":{},"sourceType":"module"}